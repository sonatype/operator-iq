# {{templateWarning}}
# Default values for iqserver.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
---
iq:
  name: nxiq
  imageName: registry.connect.redhat.com/sonatype/nexus-iq-server:{{certAppVersion}}
  imagePullPolicy: IfNotPresent
  imagePullSecret: ""
  applicationPort: 8070
  adminPort: 8071
  memory: 1Gi
  env:
    - name: JAVA_OPTS
      value: "-Djava.util.prefs.userRoot=$(SONATYPE_WORK)/javaprefs"
  # base 64 encoded license file with no line breaks
  licenseSecret: ""
  # configYaml is the full text of the config.yml file that will be passed to IQ Server
  configYaml:
    sonatypeWork: /sonatype-work
    createSampleData: true
    # add this line with this file path and the `licenseSecret` above to autoconfigure licensing
    # licenseFile: /etc/nexus-iq-license/license_lic
    server:
      applicationConnectors:
        - type: http
          port: 8070
      adminConnectors:
        - type: http
          port: 8071
      requestLog:
        appenders:
          # All appenders set to console
          - type: file
            currentLogFilename: /var/log/nexus-iq-server/request.log
            # Do not display log statements below this threshold to stdout.
            # threshold: INFO
            logFormat: "%clientHost %l %user [%date] \"%requestURL\" %statusCode %bytesSent %elapsedTime \"%header{User-Agent}\""
            archivedLogFilenamePattern: /var/log/nexus-iq-server/request-%d.log.gz
            archivedFileCount: 50
    logging:
      # The default level of all loggers. Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL.
      level: DEBUG
      # Logger-specific settings.
      loggers:
        "com.sonatype.insight.scan": INFO
        "eu.medsea.mimeutil.MimeUtil2": INFO
        "org.apache.http": INFO
        "org.apache.http.wire": ERROR
        "org.eclipse.birt.report.engine.layout.pdf.font.FontConfigReader": WARN
        "org.eclipse.jetty": INFO
        # WARNING: This reveals credentials at DEBUG level
        "org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter": INFO
        "com.sonatype.insight.audit":
          appenders:
            # All appenders set to console
            - type: file
              currentLogFilename: /var/log/nexus-iq-server/audit.log
              # Do not display log statements below this threshold to stdout.
              # threshold: INFO
              archivedLogFilenamePattern: /var/log/nexus-iq-server/audit-%d.log.gz
              archivedFileCount: 50
        "com.sonatype.insight.policy.violation":
          appenders:
            - type: console
              # Do not display log statements below this threshold to stdout.
              threshold: INFO
      appenders:
        # Settings for logging to stdout.
        - type: console
          # Do not display log statements below this threshold to stdout.
          threshold: INFO
          logFormat: "%d{'yyyy-MM-dd HH:mm:ss,SSSZ'} %level [%thread] %X{username} %logger - %msg%n"
        - type: file
          # Do not display log statements below this threshold to stdout.
          threshold: ALL
          logFormat: "%d{'yyyy-MM-dd HH:mm:ss,SSSZ'} %level [%thread] %X{username} %logger - %msg%n"
          # The file to which current statements will be logged.
          currentLogFilename: /var/log/nexus-iq-server/clm-server.log
          archivedLogFilenamePattern: /var/log/nexus-iq-server/clm-server-%d.log.gz
          archivedFileCount: 50


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

# Uncomment and modify this to run a command before starting the IQ Server
# initContainers:
#   - name: an-init-container
#     image: busybox:1.28
#     command: ['/bin/sh', '-c', 'echo "initializing"']
deployment:
  # Uncomment and modify this to run a command after starting the IQ Server
  postStart:
    command:    # '["/bin/sh", "-c", "ls"]'
deploymentStrategy:
  type: Recreate
ingress:
  enabled: false
  annotations: {}
  #  kubernetes.io/ingress.class: nginx
  #  kubernetes.io/tls-acme: "true"
  path: /
  hosts: []
  #  - nexus.local
  tls: []
  #  - secretName: nexus-local-tls
  #    hosts:
  #      - nexus.local
  #      - nexus-docker.local
  #      - nexus-docker-hosted.local

# To use an additional service, set enable to true
service:
  # name: additional-svc
  enabled: false
  labels: {}
  annotations: {}
  ports:
    - name: nexus-service
      targetPort: 80
      port: 80

persistence:
  accessMode: ReadWriteOnce
  ## If defined, storageClass: <storageClass>
  ## If set to "-", storageClass: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClass spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  # storageClass: "-"
  storageSize: 1Gi
  # existingClaim:
  # annotations:
  #  "helm.sh/resource-policy": keep
  ## Configure the volume type.
  # volumeConfiguration:
  #   hostPath:
  #     path: /data/nxiq/
